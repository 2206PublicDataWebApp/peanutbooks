<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="payPoint_Mapper">
	<!--pay 결제 관련 매핑  -->
	<resultMap 	 type="Pay" 					id="payResultMap">
  		<id 	 property="orderNo"			 	column="orderNo"/> 
		<result  property="orderNo" 			column="ORDER_NO"/> 	
		<result  property="pay" 				column="PAY"/> 
		<result  property="orderStatus" 		column="ORDER_STATUS"/> 
		<result  property="memberId" 			column="MEMBER_ID"/> 		
		<result  property="orderContents"		column="ORDER_CONTENTS"/> 
		<result  property="imp_uid" 			column="IMP_UID"/> 
  	</resultMap>
  	
  	<!--주문 확정내용 입력  -->
  	<insert id="insertPay">
		 INSERT INTO PAY 
		 VALUES((#{orderNo}||'-'||SQN_PAY_NO.NEXTVAL), ${pay},default,#{memberId},#{orderContents},'')
	</insert>
	
	<!--확정된 주문번호 가져오기 입력된것중 가장 마지막 값을 가져오게 됨  -->
	<select id="selectOdNo" resultMap="payResultMap">
		SELECT * FROM(
	 		SELECT * FROM PAY 
	 		WHERE MEMBER_ID=#{memberId} 
	 			AND ORDER_NO LIKE #{orderNo}||'%' 
	 			AND PAY= #{pay} 
	 		ORDER BY ROWNUM DESC)
 		WHERE ROWNUM =1	
	</select>
	
	<!--주문성공시 orderStatus 값 변경  -->
	<update id="updataOrder">
		UPDATE PAY SET ORDER_STATUS='Y', IMP_UID=#{imp_uid} 
		WHERE ORDER_NO=#{orderNo}	
	</update>	
		
	<!--관리자 결제내역조회시 전체 페이지 수 확인  -->
    <select id="admin_payCount" resultType="_int">
  		SELECT COUNT(*) FROM PAY 
  		  	<where>
		  		<if test="(memberId == null or memberId == '' ) and (startDate == null or startDate == '') " > 
		  			ORDER_STATUS='Y'
		  		</if>	  				  		
		  		<if test="(memberId != null and memberId !='' ) and (startDate == null or startDate == '') " >
		  			MEMBER_ID=#{memberId } AND ORDER_STATUS='Y'
		  		</if> 				
				<if test="(memberId == null or memberId == '' ) and (startDate !=null and startDate != '')">
				 	REGEXP_SUBSTR(ORDER_NO,'[^-]+',1,2) BETWEEN #{startDate } AND #{endDate } AND ORDER_STATUS='Y'			
				</if>	
  			</where>
  	</select>
  	
  		<!--관리자 결제내역리스트 확인  -->
    <select id="admin_payList"  resultMap="payResultMap">
  		SELECT * FROM PAY 
  		  	<where>
		  		<if test="(memberId == null or memberId == '' ) and (startDate == null or startDate == '') " > 
		  			ORDER_STATUS='Y'
		  		</if>	  				  		
		  		<if test="(memberId != null and memberId !='' ) and (startDate == null or startDate == '') " >
		  			MEMBER_ID=#{memberId } AND ORDER_STATUS='Y'
		  		</if> 				
				<if test="(memberId == null or memberId == '' ) and (startDate !=null and startDate != '')">
					REGEXP_SUBSTR(ORDER_NO,'[^-]+',1,2) BETWEEN #{startDate } AND #{endDate } AND ORDER_STATUS='Y'				
				</if>				
  			</where>
  	</select>
  
	<!--작가 정산관련 부분  -->
	<resultMap 	 type="WriterPay" 				id="WriterPayResultMap">
  		<id 	 property="memberId" 			column="MEMBER_ID"/> <!--id   -->
		<result  property="memberId" 			column="MEMBER_ID"/> 	
		<result  property="seriesNo" 			column="SERIES_NO"/> 	
		<result  property="ori_bookNo" 			column="ORI_BOOK_NO"/> 
		<result  property="putDate" 			column="PUTDATE"/> 
		<result  property="bankName" 			column="BANK_NAME"/> 
		<result  property="bankNo" 				column="BANK_NO"/> 
		<result  property="payment" 			column="PAYMENT"/> 
		<result  property="bankStatus" 			column="BANK_STATUS"/> 
		<result  property="wrpayNo"        		column="WRPAY_NO"/> 
		<result  property="changeP"             column="CHANGE_P"/> 
  	</resultMap>  	
  	
  	<!-- 작가 결제 요청시 저장 -->
    <insert id="insertreceiptWP">
    	INSERT INTO POINTCHANGE_TBL 
    	VALUES(#{memberId},#{seriesNo},#{ori_bookNo},DEFAULT,#{bankName},#{bankNo},${payment},DEFAULT, SQN_WRITERPAY_NO.NEXTVAL, ${changeP})    	
    </insert>
    <!-- 작가 정산 리스트 전체 갯수 구하기  -->
  	<select id="wPListCount" resultType="_int">
  		SELECT COUNT(*) FROM POINTCHANGE_TBL
  		<where>
 			<if test="memberId != null and memberId != '' " > MEMBER_ID = #{memberId }</if>	  		
	  		<if test="putDate != null and putDate != '' " >
	  			TO_CHAR(PUTDATE,'YYYY-MM-DD')=#{putDate } 
	  		</if> 	
			<if test="bankStatus !=null and bankStatus != '' ">
				BANK_STATUS = 'Y'								
			</if>
  		</where>
  		ORDER BY PUTDATE DESC
  	</select>
    
    <!--작가정산리스트 출력 -->
    <select id="selectwrList" resultMap="WriterPayResultMap">
    	SELECT * FROM POINTCHANGE_TBL 
    	<where>
    		<if test="memberId != null and memberId != '' " > MEMBER_ID = #{memberId}</if>	  		
	  		<if test="putDate != null and putDate != '' " >
	  			TO_CHAR(PUTDATE,'YYYY-MM-DD')=#{putDate } 
	  		</if> 	
			<if test="bankStatus !=null and bankStatus != '' ">
				BANK_STATUS = 'Y'								
			</if>
		</where>
    	ORDER BY PUTDATE DESC, BANK_STATUS DESC 
    </select>
    
    <!--관리자가 작자정산접수승인  -->
    <update id="updateWriterpay">
    	UPDATE POINTCHANGE_TBL SET BANK_STATUS='Y' 
    	WHERE WRPAY_NO=${wrpayNo}
    </update>  
   
  	
  	<!-- 시리즈 가져오는 부분  -->
  	<resultMap 	 type="OriginBookSeries" 		id="OriginBookSeriesResultMap">
  		<id 	 property="seriesNo" 			column="SERIES_NO"/> <!--id   -->
		<result  property="seriesNo" 			column="SERIES_NO"/> 	
		<result  property="bookNo" 				column="ORI_BOOK_NO"/> 	
		<result  property="subPic" 				column="SUB_PIC"/> 
		<result  property="subPicRename" 		column="SUB_PIC_RE"/> 
		<result  property="title" 				column="TITLE"/> 
		<result  property="contents" 			column="CONTENTS"/> 
		<result  property="modifyContents" 		column="MODIFY_CONTENTS"/> 
		<result  property="insertDate" 			column="INSERT_DATE"/> 
		<result  property="modifyDate" 			column="MODIFY_DATE"/> 
		<result  property="paidCount" 			column="PAID_COUNT"/> 
		<result  property="paidCheck" 			column="PAID_CHECK"/> 
		<result  property="viewCount" 			column="VIEW_COUNT"/> 
		<result  property="checkPermission" 	column="CHECK_PERMISSION"/> 
		<result  property="status"     			column="STATUS"/> 
  	</resultMap>
  	  <!--도서번호  시리즈 정보 받기  -->
  	<select id="origin_B_S_list" resultMap="OriginBookSeriesResultMap">
  		SELECT * FROM ORI_SERIES 
  		WHERE ORI_BOOK_NO =${bookNo } AND PAID_CHECK='Y'
  	</select>
  	<!--작가정산 접수후 포인트 차감하기  -->
  	<update id="updatePaid_count">
  		UPDATE ORI_SERIES SET PAID_COUNT=PAID_COUNT-TO_NUMBER(${changeP }) 
  		WHERE ORI_BOOK_NO =#{ori_bookNo } AND SERIES_NO=${seriesNo }
  	</update>
  	
  	<!--  책 넘버 먼저 가져 오는 부분 -->
  	<resultMap 	 type="OriginBook" 				id="OriginBookResultMap">
  		<id 	 property="bookNo" 				column="ORI_BOOK_NO"/> <!--id   -->
		<result  property="bookNo" 				column="ORI_BOOK_NO"/> 
		<result  property="bookTitle" 			column="BOOK_TITLE"/> 	
		<result  property="bookInfo" 			column="BOOK_INFO"/> 	
		<result  property="category" 			column="CATEGORY"/> 
		<result  property="insertDate" 			column="INSERT_DATE"/> 
		<result  property="cover" 				column="CORVER"/> 
		<result  property="coverRename" 		column="CORVER_RENAME"/> 
		<result  property="status" 				column="STATUS"/> 
		<result  property="score" 				column="SCORE"/> 
		<result  property="viewCount" 			column="VIEW_COUNT"/> 
		<result  property="memberId" 			column="MEMBER_ID"/> 
		<result  property="checkPermission" 	column="BOOK_PERMISSION"/> 
		<result  property="scoreCount" 			column="SCORE_COUNT"/> 		 
  	</resultMap>
  	<!--작가 책 정보 받기  -->
  	<select id="OriginBookNo" resultMap="OriginBookResultMap">
  		SELECT * FROM ORIGIN_BOOK 
  		WHERE MEMBER_ID = #{memberId }  	
  	</select>
 
  <!--땅콩 포인트 관련  -->	
  	<resultMap   type="PeanutPoint" 			id="peanutResultMap">
  		<id 	 property="peanutNo" 			column="PEANUT_NO"/> <!--id   -->
		<result  property="peanutNo" 			column="PEANUT_NO"/> 
		<result  property="ppDate" 				column="PP_DATE"/> 
		<result  property="peanutPoint" 		column="PEANUT_POINT"/> 	
		<result  property="ppStatus" 			column="PP_STATUS"/> 
		<result  property="bookNo" 				column="BOOK_NO"/>
		<result  property="bookName" 			column="BOOK_NAME"/>
        <result  property="memberId" 			column="MEMBER_ID"/>
		<result  property="orderNo" 			column="ORDER_NO"/>  
		<result  property="seriesNo" 			column="SERIES_NO"/>  
		 
  	</resultMap>
  	<!--결제 후 땅콩포인트 등록  -->
  	<insert id="insertPeanut">
  		 INSERT INTO PEANUTPOINT_TBL 
  		 VALUES (SQN_PEANUT_NO.NEXTVAL,SYSDATE,${peanutPoint},'Y',DEFAULT,DEFAULT,#{memberId},#{orderNo},DEFAULT)
  	</insert>
  	<!--관리자 땅콩포인트 수정  -->
  	<insert id="admin_insert_Peanut">
  		 INSERT INTO PEANUTPOINT_TBL 
  		 VALUES (SQN_PEANUT_NO.NEXTVAL,SYSDATE,${peanutPoint},'Y',DEFAULT,#{bookName},#{memberId},DEFAULT,DEFAULT)
  	</insert>
  	  	
  	<!--관리자 검색시   땅콩 갯수  -->
  	<select id="admin_searchppSum" resultType="_int">
  		SELECT SUM(PEANUT_POINT) FROM PEANUTPOINT_TBL 
  		<where>
	  		<if test="memberId == 'admin'  and (ppDate==null or ppDate == '') " > </if>	  		
	  		<if test="(memberId != 'admin' or memberId != null or memberId != '') and (ppDate==null or ppDate == '') " >
	  			MEMBER_ID=#{memberId }
	  		</if> 	
			<if
				test="(memberId != 'admin' or memberId == null or memberId == '') and (ppDate!=null and ppDate != '')">
				TO_CHAR((PP_DATE),'YYYY-MM-DD')=#{ppDate } 				
			</if>
		</where>		
  	</select>
  	
  	<!--검색시 땅콩 리스트 페이지전체 갯수 구하기  -->
  	<select id="admin_ppListCount" resultType="_int">
  		SELECT COUNT(*) FROM PEANUTPOINT_TBL 
  		  	<where>
		  		<if test="memberId == 'admin' or memberId == null or memberId == '' " > </if>	  		
		  		<if test="(memberId != 'admin' and memberId != null and memberId != '') and (ppDate==null or ppDate == '') " >
		  			MEMBER_ID=#{memberId }
		  		</if> 	
				<if
					test="(memberId == null or memberId == '') and (ppDate!=null and ppDate != '')">
					TO_CHAR((PP_DATE),'YYYY-MM-DD')=#{ppDate } 				
				</if>
  			</where>
  	</select>
  	
  	<!--검색시  땅콩  리스트  -->
  	<select id="admin_peanutpointLsit" resultMap="peanutResultMap">
  		SELECT * FROM PEANUTPOINT_TBL 
  		<where>
 			<if test="memberId == 'admin' or memberId == null or memberId == '' " > </if>	  		
		  		<if test="(memberId != 'admin' and memberId != null and memberId != '') and (ppDate==null or ppDate == '') " >
		  			MEMBER_ID=#{memberId }
		  		</if> 	
				<if
					test="(memberId == null or memberId == '') and (ppDate!=null and ppDate != '')">
					TO_CHAR((PP_DATE),'YYYY-MM-DD')=#{ppDate } 				
				</if>
  		</where>
  		ORDER BY PP_DATE DESC
  	</select>
  	
  	<!--id별 로그인 시에 땅콩 갯수  -->
  	<select id="idppSum" resultType="_int">
  		SELECT SUM(PEANUT_POINT) FROM PEANUTPOINT_TBL 
  		WHERE MEMBER_ID=#{memberId }
  	</select>
  	
  	<!--id별 땅콩 리스트 전체페이지 갯수 구하기  -->
  	<select id="ppListCount" resultType="_int">
  		SELECT COUNT(*) FROM PEANUTPOINT_TBL 
  		<where>
	  		MEMBER_ID=#{memberId } 
			<if
				test="(ppDate!=null) and (ppDate != '')">
				AND TO_CHAR((PP_DATE),'YYYY-MM-DD')=#{ppDate } 				
			</if>
  		</where>			
  	</select>
    <!--id별 땅콩 전체 리스트  -->
  	<select id="peanut_pointLsit" resultMap="peanutResultMap">
  		SELECT * FROM PEANUTPOINT_TBL 
  		WHERE MEMBER_ID=#{memberId }  		
	  		
			<if
				test="(ppDate!=null) and (ppDate != '')">
				AND TO_CHAR((PP_DATE),'YYYY-MM-DD')=#{ppDate } 				
			</if>
		
  	 	ORDER BY PP_DATE DESC 
  	</select>
  	<!--땅콩정산하여 멤버 포인트에 넣기  -->
	<update id="memberPoint">
		UPDATE MEMBER_TBL SET M_POINT=${mPoint}
		WHERE MEMBER_ID=#{memberId}
	</update>
  	
  	<resultMap 	 type="SeasonTicket" 		id="seasonTicketResultMap">
  		<id 	 property="orderNo" 		column="ORDER_NO"/> 
		<result  property="orderNo" 		column="ORDER_NO"/> 	
		<result  property="orderDate" 		column="ORDER_DATE"/> 
		<result  property="lastDate" 		column="LAST_DATE"/> 
		<result  property="memberId" 		column="MEMBER_ID"/> 
		<result  property="expiry_yn"	    column="EXPIRY_YN"/> 
  	</resultMap>
  	
  	<!--결제후 구독권 등록  -->
 	<insert id="insertSSticket">
		 INSERT INTO SEASONTICKET_TBL 
		 VALUES(#{orderNo}, SYSDATE,ADD_MONTHS(SYSDATE,1),#{memberId},'N')
	</insert>

		
	<!--  로그인시 구독여부 및 마지막 날짜확인 -->  
	<select id="selectLastSSticket" resultType="string">		
		SELECT TO_CHAR(LAST_DATE+1/(60*24),'YYYY-MM-DD HH24:MI:SS') FROM SEASONTICKET_TBL 
		WHERE MEMBER_ID=#{memberId} AND EXPIRY_YN='N' 	
	</select>
	<!--관리자 회원정보수정시 구독권변경  -->
	<update id="admin_update_st">
		UPDATE SEASONTICKET_TBL SET EXPIRY_YN = #{expiry_yn} WHERE MEMBER_ID=#{memberId };
	</update>
	
	
	<resultMap  type="Member" 			id="memberResultMap">
		<id 	property="memberId" 	column="MEMBER_ID"/>  <!-- 회원 아이디 -->
		<result property="memberPw" 	column="MEMBER_PW"/>  <!-- 회원 비밀번호 -->
		<result property="mNickname" 	column="M_NICKNAME"/> <!-- 회원 별명 -->
		<result property="mEmail" 		column="M_EMAIL"/> 	  <!-- 회원 이메일 -->
		<result property="emailYN" 		column="EMAIL_YN"/>   <!-- 이메일 인증 여부 -->
		<result property="joinDate" 	column="JOIN_DATE"/>  <!-- 회원 등록일 -->
		<result property="deleteYN" 	column="DELETE_YN"/>  <!-- 회원 탈퇴 여부 -->
		<result property="mPoint" 		column="M_POINT"/>    <!-- 회원 포인트(땅콩) -->
		<result property="subYN" 		column="SUB_YN"/>     <!-- 월 구독 여부 -->
		<result property="naverId" 		column="NAVER_ID"/>   <!-- 네이버 아이디 -->
		<result property="kakaoId" 		column="KAKAO_ID"/>   <!-- 카카오 아이디 -->
		<result property="accType" 		column="ACC_TYPE"/>   <!-- 계정 종류(일반/네이버/카카오) -->
		<result property="adminYN" 		column="ADMIN_YN"/>   <!-- 관리자 여부 -->
	</resultMap>
	
	<!--구독권 구매 후 member 구독권 y/n변경  -->
	<update id="updateMemberSSticket">
		UPDATE MEMBER_TBL SET SUB_YN='Y' 
		WHERE MEMBER_ID=#{memberId}
	</update>
	
	<!--관리자 구독권 여부 수정 후 member 구독권 y/n 반영  -->
	<update id="admin_update_SSticket">
		UPDATE MEMBER_TBL SET SUB_YN=#{subYN } 
		WHERE MEMBER_ID=#{memberId}
	</update>

	
  </mapper>