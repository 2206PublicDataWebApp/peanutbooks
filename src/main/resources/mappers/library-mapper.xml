<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="librarymapper">
  
  <!-- 내서재 등록 -->
  <insert id="insertMybook">
  insert into Library values(#{memberId},#{bookNo},#{category},seq_library_no.nextval)
  </insert>
  
  <delete id="deleteMybook">
  delete Library where  MEMBER_ID= #{memberId} and CATEGORY = #{category} and BOOK_NO = #{bookNo}
  </delete>
  
  
 	<resultMap type="Library" id="libraryResultMap">
 		<id column="MEMBER_ID"         property="memberId" />
 		<result column="BOOK_NO"    property="bookNo" />
 		<result column="CATEGORY"        property="category" />
 		<result column="LIBRARY_NO"   property="libraryNo" />
 		<result column="title"   property="bookTitle" />
 		<result column="picName"   property="picName" />

 	</resultMap>
  
  <!-- 내 서재 등록여부 확인 -->
  <select id="selectMybookMember" resultType="_int">
  	select count(LIBRARY_NO) from Library where  MEMBER_ID= #{memberId} and CATEGORY = #{category} and BOOK_NO = #{bookNo}
  
  </select>
  
  <!--  내 서재 목록 -->
  <select id="selectOneMemberLibrary" resultMap="libraryResultMap">
select library_no,book_no,category,"avg"||''||"avg1" "avg", "count"||''||"count1" "count","title1"||''||"title" "title","pic1"||''||"pic2" "picName"  from library left join (select library_no,nor_book_no,DECODE(scorecount, 0, 0, score/scorecount) "avg", view_count "count", book_title "title",cover_rename "pic2" from library left join normal_BOOK on book_no=nor_book_no where library.category='normal' and status like 'Y%') using(library_no)
left join(select library_no,ori_book_no , DECODE(score_count, 0, 0, score/score_count)  "avg1" ,book_title "title1", view_count "count1",corver_rename "pic1" from library left join ORIGIN_BOOK on book_no=ori_book_no where library.CATEGORY = 'origin' and status like 'Y%' and BOOK_PERMISSION like 'Y%') using (library_no)
<where>
member_id = #{memberId} and ("title" like '%%' or "title1" like '%%')
<if test="category.toString() == 'origin'">
	and category = 'origin'
	<if test="searchValue != null">
		and "title1" like '%'||#{searchValue,jdbcType=VARCHAR}||'%'
	</if>
</if>
<if test="category.toString() == 'normal'">
	and category = 'normal'
	<if test="searchValue != null">
		and "title" like '%'||#{searchValue,jdbcType=VARCHAR}||'%'
	</if>
</if>
<if test="category.toString() == 'all'">
	<if test="searchValue != null">
	and ("title1" like '%'||#{searchValue,jdbcType=VARCHAR}||'%' or "title" like '%'||#{searchValue,jdbcType=VARCHAR}||'%')
	</if>
</if>
</where>
<if test="step.toString() == 'all'">
order by library_no desc</if>
<if test="step.toString() == 'star'">
order by "avg" desc</if>
<if test="step.toString() == 'view'">
order by "count" desc</if>
  
  
  
  </select>
  
  <!-- 페이징용 내서재 총 갯수 파악 -->
  <select id="selectCountOneMemberLibrary" resultType="_int">
select count(library_no)  from library left join (select library_no,nor_book_no,DECODE(scorecount, 0, 0, score/scorecount) "avg", view_count "count", book_title "title",cover_rename "pic2" from library left join normal_BOOK on book_no=nor_book_no where library.category='normal' and status like 'Y%') using(library_no)
left join(select library_no,ori_book_no , DECODE(score_count, 0, 0, score/score_count)  "avg1" ,book_title "title1", view_count "count1",corver_rename "pic1" from library left join ORIGIN_BOOK on book_no=ori_book_no where library.CATEGORY = 'origin' and status like 'Y%' and BOOK_PERMISSION like 'Y%') using (library_no)
<where>
member_id = #{memberId} and ("title" like '%%' or "title1" like '%%')
<if test="category.toString() == 'origin'">
	and category = 'origin'
	<if test="searchValue != null">
		and "title1" like '%'||#{searchValue,jdbcType=VARCHAR}||'%'
	</if>
</if>
<if test="category.toString() == 'normal'">
	and category = 'normal'
	<if test="searchValue != null">
		and "title" like '%'||#{searchValue,jdbcType=VARCHAR}||'%'
	</if>
</if>
<if test="category.toString() == 'all'">
	<if test="searchValue != null">
	and ("title1" like '%'||#{searchValue,jdbcType=VARCHAR}||'%' or "title" like '%'||#{searchValue,jdbcType=VARCHAR}||'%')
	</if>
</if>
</where>
 </select>
  
  <!-- 내서재 피넛 오리지널 목록 -->
  <select id="selectOneMemberOriLibrary" resultMap="libraryResultMap">
  	select * from Library where  MEMBER_ID= #{memberId} and CATEGORY = 'origin' order by LIBRARY_NO desc
  </select>
  
  <select id="selectOneMemberNorLibrary" resultMap="libraryResultMap">
  	select * from Library where  MEMBER_ID= #{memberId} and CATEGORY = 'normal' order by LIBRARY_NO desc
  </select>
  
  
  <!-- 구입도서 목록 -->
   	<resultMap type="peanutPaidSeries" id="PaidResultMap">
 		<id column="MEMBER_ID"         property="memberId" />
 		<result column="BOOK_NO"    property="bookNo" />
 		<result column="SERIES_NO"        property="seriesNo" />
 		<result column="PEANUT_NO"   property="peanutNo" />
 		<result column="title"   property="title" />
 		<result column="book_title"   property="bookTitle" />
 		<result column="SUB_PIC_RE"   property="picName" />

 	</resultMap>
  
  <!-- 구입도서 목록 전부 가져오기 -->
  <select id="selectOneMemberPaid" resultMap="PaidResultMap">
	select peanut_no, book_title, ori_series.title "title", ori_series.view_count,DECODE(origin_book.score_count, 0, 0, origin_book.score/origin_book.score_count) "avg", peanutpoint_tbl.book_no "book_no", peanutpoint_tbl.series_no "series_no", sub_pic_re
	from peanutpoint_tbl left join ori_series on book_no=ori_book_no and peanutpoint_tbl.series_no=ori_series.series_no 
	left join origin_book 
	on peanutpoint_tbl.book_no
	=origin_book.ori_book_no
	<where>
	peanutpoint_tbl.MEMBER_ID= #{memberId} and ori_series.SUB_PIC_RE like '%%' 
	<if test="searchValue != null">
	and (book_title like '%'||#{searchValue}||'%' or title like '%'||#{searchValue}||'%')
	</if>
	</where>
	
	<if test="step.toString() == 'star'">
	 order by "avg" desc
	</if> 
	<if test="step.toString() == 'all'">
	 order by PEANUT_NO desc
	</if> 
	<if test="step.toString() == 'count'">
	 order by view_count desc
	</if> 
	
  
  </select>
  
  
  <!-- 구입도서 목록 전부 가져오기 -->
  <select id="selectOneMemberPaidCount" resultType="_int">
	select count(peanut_no)
	from peanutpoint_tbl left join ori_series on book_no=ori_book_no and peanutpoint_tbl.series_no=ori_series.series_no 
	left join origin_book 
	on peanutpoint_tbl.book_no
	=origin_book.ori_book_no
	<where>
	peanutpoint_tbl.MEMBER_ID= #{memberId} and ori_series.SUB_PIC_RE like '%%' 
	<if test="searchValue != null">
	and (title like '%'||#{searchValue}||'%' or book_name like '%'||#{searchValue}||'%')
	</if>
	</where>
	
  
  </select>
  

  
  </mapper>